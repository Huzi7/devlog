// Code generated by MockGen. DO NOT EDIT.
// Source: util.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockTime is a mock of Time interface
type MockTime struct {
	ctrl     *gomock.Controller
	recorder *MockTimeMockRecorder
}

// MockTimeMockRecorder is the mock recorder for MockTime
type MockTimeMockRecorder struct {
	mock *MockTime
}

// NewMockTime creates a new mock instance
func NewMockTime(ctrl *gomock.Controller) *MockTime {
	mock := &MockTime{ctrl: ctrl}
	mock.recorder = &MockTimeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTime) EXPECT() *MockTimeMockRecorder {
	return m.recorder
}

// GetCurrentDayAndTime mocks base method
func (m *MockTime) GetCurrentDayAndTime() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentDayAndTime")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetCurrentDayAndTime indicates an expected call of GetCurrentDayAndTime
func (mr *MockTimeMockRecorder) GetCurrentDayAndTime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentDayAndTime", reflect.TypeOf((*MockTime)(nil).GetCurrentDayAndTime))
}
